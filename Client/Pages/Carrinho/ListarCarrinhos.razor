@page "/Carrinhos"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager
<div class="container mb-4 viewport-100 mt-4">
    <div class="row">
        <div class="col-sm-8">
            <div class="card">
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Produto</th>
                                <th scope="col">Nome</th>
                                <th scope="col">Quantidade</th>
                                <th scope="col">Pre√ßo</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        @foreach (var carrinho in ListaProdutos)
                        {
                            <tbody>
                                <tr>
                                    <th style="width: 16.66%">
                                        <ImagemProduto ImagemRemota="@carrinho.Produtos.ImagemProduto" />
                                    </th>
                                    <td>@carrinho.Produtos.Nome</td>
                                    <td style="width: 25.66%">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <button class="btn btn-outline-secondary" type="button" id="button-addon1"
                                                @onclick="@(() => EditarCarrinho(carrinho, false))">-</button>
                                            </div>
                                            <input type="text" disabled value="@(carrinho.Quantidade)"
                                            class="form-control text-center" />
                                            <div class="input-group-append">
                                                <button class="btn btn-outline-secondary" type="button" id="button-addon2"
                                                @onclick="@(() => EditarCarrinho(carrinho, true))">+</button>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@String.Format("{0, 0:C2}", (@carrinho.Quantidade * @carrinho.Produtos.Preco))</td>
                                    <td>
                                        <button class="btn btn-danger" type="button" id="button-addon2"
                                        @onclick="@(() => DeleteCarrinho(carrinho))">Excluir</button>
                                    </td>
                                </tr>
                            </tbody>
                        }
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-4 order-md-2 mb-4">
            <form class="card p-2">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Cupom ">
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-secondary">Aplicar Cupom</button>
                    </div>
                </div>
            </form>
            <ul class="list-group mb-3">
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">Subtotal</h6>
                    </div>
                    <span class="text-muted">@String.Format("{0, 0:C2}", @subTotal)</span>
                </li>
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">Frete</h6>
                        <small class="text-muted"> Envio para Av. Paulista, 1541</small>
                    </div>
                    <span class="text-muted">@String.Format("{0, 0:C2}", 20)</span>
                </li>
                <li class="list-group-item d-flex justify-content-between bg-light">
                    <div class="text-success">
                        <h6 class="my-0">Cupom</h6>
                        <small>TESTE</small>
                    </div>
                    <span class="text-success">@String.Format("{0, 0:C2}", -5)</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total</span>
                    <strong>@String.Format("{0, 0:C2}", -5 + 20 + @subTotal)</strong>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary mr-1" @onclick="@(() => CreatePedido())">Ir para Pagamento</button>
                </li>
            </ul>
        </div>
    </div>
</div>

@code {
    public decimal subTotal = 0;
    public List<Carrinho> ListaProdutos = new List<Carrinho>();
    protected override async Task OnInitializedAsync()
    {

        var carrinho = await Http.GetFromJsonAsync<List<Carrinho>>("/Carrinho/GetId/" + 1);
        foreach (var item in carrinho)
        {
            ListaProdutos.Add(item);
            subTotal = subTotal + (item.Quantidade * item.Produtos.Preco);
        }
    }

    protected async Task CreateCarrinho(Produto produto)
    {
        await Http.PostAsJsonAsync("/Carrinho/Create", produto);
        NavigationManager.NavigateTo("/");
    }
    private async Task DeleteCarrinho(Carrinho carrinho)
    {
        await Http.DeleteAsync("/Carrinho/Delete/" + carrinho.ProdutoId);
        ListaProdutos.Remove(carrinho);
        subTotal = subTotal - (carrinho.Quantidade * carrinho.Produtos.Preco);
    }
    private async Task EditarCarrinho(Carrinho carrinho, bool acao)
    {
        if (acao)
        {
            subTotal = subTotal + carrinho.Produtos.Preco;
            carrinho.Quantidade++;
        }
        else
        {
            if (carrinho.Quantidade > 1)
            {
                subTotal = subTotal - carrinho.Produtos.Preco;
                carrinho.Quantidade--;
            }
            else
            {
                await DeleteCarrinho(carrinho);
            }
        }

        await Http.PutAsJsonAsync("/Carrinho/Update", carrinho);
    }
    protected async Task CreatePedido()
    {
        await Http.PostAsJsonAsync("/Pedido/Create", ListaProdutos);

        NavigationManager.NavigateTo("/");
    }
}
